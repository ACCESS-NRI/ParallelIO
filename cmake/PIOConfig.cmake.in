@PACKAGE_INIT@

if(NOT PIO_FIND_QUIETLY)
  message(STATUS "Found PIO: ${PACKAGE_PREFIX_DIR}")
endif()

set(_PIO_ENABLE_TIMING @PIO_ENABLE_TIMING@)
set(_PIO_ENABLE_FORTRAN @PIO_ENABLE_FORTRAN@)

# The following components are supported by PIO (order is important)
set(_PIO_supported_components GPTL C Fortran)

# Check validity of requested components
foreach(_comp ${PIO_FIND_COMPONENTS})
  if(NOT _comp IN_LIST _PIO_supported_components)
    set(PIO_FOUND False)
    set(PIO_NOT_FOUND_MESSAGE "Unsupported component: ${_comp}")
  endif()
endforeach()

# Some components are only available if they were built
if ((GPTL IN_LIST ${PIO_FIND_COMPONENTS}) AND (NOT _PIO_ENABLE_TIMING))
  set(PIO_FOUND False)
  set(PIO_NOT_FOUND_MESSAGE "The following component is unavailable: GPTL")
endif()
if ((Fortran IN_LIST ${PIO_FIND_COMPONENTS}) AND (NOT _PIO_ENABLE_FORTRAN))
  set(PIO_FOUND False)
  set(PIO_NOT_FOUND_MESSAGE "The following component is unavailable: Fortran")
endif()

# Build a list of all the required components, taking into account their dependencies
set(_PIO_required_components ${PIO_FIND_COMPONENTS})
if(C IN_LIST _PIO_required_components)
  if(_PIO_ENABLE_TIMING)
    list(APPEND _PIO_required_components GPTL)
  endif()
endif()
if(Fortran IN_LIST _PIO_required_components)
  list(APPEND _PIO_required_components C)
  if(_PIO_ENABLE_TIMING)
    list(APPEND _PIO_required_components GPTL)
  endif()
endif()
list(REMOVE_DUPLICATES _PIO_required_components)

# Include required targets. We do this by looping over the _supported_components
# list because the order in which targets are loaded matters.
foreach(_comp ${_PIO_supported_components})
  if(_comp IN_LIST _PIO_required_components)
    include("${CMAKE_CURRENT_LIST_DIR}/PIO${_comp}Targets.cmake")
  endif()
endforeach()

# Find dependencies of required components
include(CMakeFindDependencyMacro)
list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR})

if(C IN_LIST _PIO_required_components)
  find_dependency(NetCDF COMPONENTS C)
endif()
if(Fortran IN_LIST _PIO_required_components)
  find_dependency(NetCDF COMPONENTS Fortran)
endif()

list(REMOVE_ITEM CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR})